function main() {
  var canvas = document.getElementById("canvas");

  /** @type {WebGL2RenderingContext} */
  var gl = canvas.getContext("webgl");

  var character_S = [
    // Up
    -0.15, 0.3,
    -0.15, 0.275,
    -0.25, 0.275,

    -0.15, 0.3,
    -0.25, 0.3,
    -0.25, 0.275,

    -0.25, 0.3,
    -0.25, 0.275,
    -0.3, 0.275,

    -0.3, 0.275,
    -0.3, 0.25,
    -0.25, 0.275,

    -0.3, 0.275,
    -0.3, 0.25,
    -0.325, 0.25,

    -0.325, 0.25,
    -0.3, 0.25,
    -0.325, 0.2,

    -0.325, 0.25,
    -0.325, 0.2,
    -0.35, 0.2,

    -0.35, 0.2,
    -0.325, 0.2,
    -0.35, 0.1,

    -0.325, 0.2,
    -0.35, 0.1,
    -0.325, 0.1,

    -0.35, 0.1,
    -0.325, 0.1,
    -0.325, 0.05,

    -0.325, 0.1,
    -0.325, 0.05,
    -0.3, 0.05,

    -0.3, 0.05,
    -0.325, 0.05,
    -0.3, 0.025,

    -0.3, 0.05,
    -0.3, 0.025,
    -0.25, 0.025,

    -0.3, 0.025,
    -0.25, 0.025,
    -0.25, 0,

    -0.15, 0,
    -0.15, 0.025,
    -0.25, 0.025,
    
    -0.15, 0,
    -0.25, 0,
    -0.25, 0.025,
    
    // Bottom

    -0.1, -0.25,
    -0.15, -0.25,
    -0.15, -0.275,

    -0.1, -0.225,
    -0.1, -0.25,
    -0.15, -0.25,

    -0.1, -0.225,
    -0.1, -0.25,
    -0.075, -0.225,

    -0.075, -0.225,
    -0.1, -0.225,
    -0.075, -0.175,

    -0.075, -0.225,
    -0.075, -0.175,
    -0.05, -0.175,

    -0.05, -0.075,
    -0.075, -0.175,
    -0.05, -0.175,

    -0.075, -0.075,
    -0.05, -0.075,
    -0.075, -0.175,

    -0.05, -0.075,
    -0.075, -0.075,
    -0.075, -0.025,

    -0.075, -0.025,
    -0.075, -0.075,
    -0.1, -0.025,

    -0.075, -0.025,
    -0.1, 0,
    -0.1, -0.025,

    -0.1, 0,
    -0.15, 0.025,
    -0.15, 0,

    -0.1, 0,
    -0.1, -0.025,
    -0.15, 0,

    -0.15, -0.25,
    -0.25, -0.25,
    -0.25, -0.275,

    -0.15, -0.25,
    -0.15, -0.275,
    -0.25, -0.275,

    // Hangover

    -0.15, 0.3,
    -0.15, 0.275,
    -0.1, 0.275,

    -0.1, 0.275,
    -0.1, 0.25,
    -0.15, 0.275,

    -0.1, 0.275,
    -0.1, 0.25,
    -0.075, 0.25,

    -0.075, 0.25,
    -0.1, 0.25,
    -0.075, 0.2,

    -0.075, 0.25,
    -0.075, 0.2,
    -0.05, 0.2,

    -0.05, 0.2,
    -0.075, 0.2,
    -0.05, 0.125,

    -0.075, 0.2,
    -0.05, 0.125,
    -0.075, 0.125,

    -0.3, -0.25,
    -0.25, -0.25,
    -0.25, -0.275,

    -0.3, -0.225,
    -0.3, -0.25,
    -0.25, -0.25,

    -0.3, -0.225,
    -0.3, -0.25,
    -0.325, -0.225,

    -0.325, -0.225,
    -0.3, -0.225,
    -0.325, -0.175,

    -0.325, -0.225,
    -0.325, -0.175,
    -0.35, -0.175,

    -0.35, -0.075,
    -0.325, -0.175,
    -0.35, -0.175,

    -0.325, -0.075,
    -0.35, -0.075,
    -0.325, -0.175,

    -0.15, 0.3,
    -0.15, 0.275,
    -0.1, 0.275,

    -0.1, 0.275,
    -0.1, 0.25,
    -0.15, 0.275,

    -0.1, 0.275,
    -0.1, 0.25,
    -0.075, 0.25,

    -0.075, 0.25,
    -0.1, 0.25,
    -0.075, 0.2,

    -0.075, 0.25,
    -0.075, 0.2,
    -0.05, 0.2,

    -0.05, 0.2,
    -0.075, 0.2,
    -0.05, 0.125,

    -0.075, 0.2,
    -0.05, 0.125,
    -0.075, 0.125,

    -0.3, -0.25,
    -0.25, -0.25,
    -0.25, -0.275,

    -0.3, -0.225,
    -0.3, -0.25,
    -0.25, -0.25,

    -0.3, -0.225,
    -0.3, -0.25,
    -0.325, -0.225,

    -0.325, -0.225,
    -0.3, -0.225,
    -0.325, -0.175,

    -0.325, -0.225,
    -0.325, -0.175,
    -0.35, -0.175,

    -0.35, -0.075,
    -0.325, -0.175,
    -0.35, -0.175,

    -0.325, -0.075,
    -0.35, -0.075,
    -0.325, -0.175,
    
  ];

  const character_H = [
    // Top
    0.25, 0.025,
    0.25, 0,
    0.15, 0,
    
    0.25, 0.025,
    0.15, 0.025,
    0.15, 0,
    
    0.15, 0.025,
    0.15, 0,
    0.1, 0,
    
    0.1, 0,
    0.1, -0.025,
    0.15, 0,
    
    0.1, 0,
    0.1, -0.025,
    0.075, -0.025,
    
    0.075, -0.025,
    0.1, -0.025,
    0.075, -0.075,
    
    0.075, -0.025,
    0.075, -0.075,
    0.05, -0.075,
    
    0.05, 0.275,
    0.075, 0.275,
    0.05, -0.275,
    
    0.075, 0.275,
    0.05, -0.275,
    0.075, -0.275,

    // Bottom
    0.35, -0.075,
    0.325, -0.275,
    0.35, -0.275,

    0.325, -0.075,
    0.35, -0.075,
    0.325, -0.275,

    0.35, -0.075,
    0.325, -0.075,
    0.325, -0.025,

    0.325, -0.025,
    0.325, -0.075,
    0.3, -0.025,

    0.325, -0.025,
    0.3, 0,
    0.3, -0.025,

    0.3, 0,
    0.25, 0.025,
    0.25, 0,

    0.3, 0,
    0.3, -0.025,
    0.25, 0,
  ]

  const vertices = character_S.concat(character_H);
  
  var vertexShaderCode = `
  attribute vec2 aposition;
  
  void main() {
    gl_Position = vec4(aposition, 0.0, 1.0);

    }
  `;

  var positionBuffer = gl.createBuffer();
  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);
  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);
  gl.bindBuffer(gl.ARRAY_BUFFER, null);

  var vertexShader = gl.createShader(gl.VERTEX_SHADER);
  gl.shaderSource(vertexShader, vertexShaderCode);
  gl.compileShader(vertexShader);

  var fragmentShaderCode = `
    void main() { 
      gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); 
    }
  `;

  var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
  gl.shaderSource(fragmentShader, fragmentShaderCode);
  gl.compileShader(fragmentShader);

  var program = gl.createProgram();
  gl.attachShader(program, vertexShader);
  gl.attachShader(program, fragmentShader);
  gl.linkProgram(program);
  gl.useProgram(program);

  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);
  var aPosition = gl.getAttribLocation(program, "aposition");
  gl.vertexAttribPointer(aPosition, 2, gl.FLOAT, false, 0, 0);
  gl.enableVertexAttribArray(aPosition);

  gl.clearColor(0.9, 0.9, 0.9, 1.0);
  gl.clear(gl.COLOR_BUFFER_BIT);

  gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 2);
}
